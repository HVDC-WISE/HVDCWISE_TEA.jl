var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = HVDCWISE_TEA","category":"page"},{"location":"#HVDCWISE_TEA","page":"Home","title":"HVDCWISE_TEA","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for HVDCWISE_TEA.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [HVDCWISE_TEA]","category":"page"},{"location":"#HVDCWISE_TEA._DCdata","page":"Home","title":"HVDCWISE_TEA._DCdata","text":"only dc side data\n\n\n\n\n\n","category":"constant"},{"location":"#HVDCWISE_TEA._UNUSED_VARS","page":"Home","title":"HVDCWISE_TEA._UNUSED_VARS","text":"list of all PowerModelsunused properties inHVDCWISE_TEA` optimisation model\n\n\n\n\n\n","category":"constant"},{"location":"#HVDCWISE_TEA._conductor_matrix","page":"Home","title":"HVDCWISE_TEA._conductor_matrix","text":"field names that should become multiconductor matrix not arrays\n\n\n\n\n\n","category":"constant"},{"location":"#HVDCWISE_TEA._conductorless","page":"Home","title":"HVDCWISE_TEA._conductorless","text":"field names that should not be multiconductor values\n\n\n\n\n\n","category":"constant"},{"location":"#HVDCWISE_TEA.add_slack_operation_cost!-Tuple{Any, PowerModels.AbstractACPModel, Int64}","page":"Home","title":"HVDCWISE_TEA.add_slack_operation_cost!","text":"expression for nodal slack power cost\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.add_slack_operation_cost!-Tuple{Any, PowerModels.AbstractDCPModel, Int64}","page":"Home","title":"HVDCWISE_TEA.add_slack_operation_cost!","text":"expression for nodal slack power cost\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.conductorsDC_status-Tuple{Dict{String}}","page":"Home","title":"HVDCWISE_TEA.conductorsDC_status","text":"Generate vector of multi-conductor status states for convdc and branchdc components\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.constraint_flexible_demand-Tuple{PowerModels.AbstractDCPModel, Int64, Any, Any, Any}","page":"Home","title":"HVDCWISE_TEA.constraint_flexible_demand","text":"constraint on total active power demand accounting for all flexibility components\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.constraint_flexible_demand-Tuple{PowerModels.AbstractPowerModel, Int64}","page":"Home","title":"HVDCWISE_TEA.constraint_flexible_demand","text":"constraint on total flexible load power\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.constraint_power_balance_ac-Tuple{PowerModels.AbstractDCPModel, Int64, Int64, Vararg{Any, 9}}","page":"Home","title":"HVDCWISE_TEA.constraint_power_balance_ac","text":"nodal power balance constraint of hybrid AC/DC multi-conductor network including storage & flexible demand\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.constraint_power_balance_ac-Tuple{PowerModels.AbstractPowerModel, Int64}","page":"Home","title":"HVDCWISE_TEA.constraint_power_balance_ac","text":"Power balance of hybrid AC/DC network with storage & flexible demand\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.make_multiconductor!-Tuple{Dict{String}}","page":"Home","title":"HVDCWISE_TEA.make_multiconductor!","text":"make_multiconductor!(data::Dict{String,<:Any}, components::Vector{String})\n\nGenerate a multinetwork data structure from a single network and a time series.\n\nArguments\n\ndata: single-conductor data structure to be expanded.\ncomponents: network DC components to which the multi-conductor transformation is applied.   Default to list of all modelled DC component names, i.e. [\"busdc\", \"convdc\", \"branchdc\"].\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.make_multinetwork-Tuple{Dict{String, Any}, Dict{String, Any}}","page":"Home","title":"HVDCWISE_TEA.make_multinetwork","text":"make_multinetwork(sn_data, time_series; <keyword arguments>)\n\nGenerate a multinetwork data structure from a single network and a time series.\n\nArguments\n\nsn_data: single-network data structure to be replicated.\ntime_series: data structure containing the time series.\nglobal_keys: keys that are stored once per multinetwork (they are not repeated in each nw).\nnumber_of_nws: number of networks to be created from sn_data and time_series; default: read from dim.\nnw_id_offset: optional value to be added to time_series ids to shift nw ids in multinetwork data structure; default: read from dim.\ncheck_dim: whether to check for dim in sn_data; default: true.\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.parse_data-Tuple{String, Vector{String}}","page":"Home","title":"HVDCWISE_TEA.parse_data","text":"parse_data(path2grid::String, path2data::String; kwargs...)\n\nWrapper function for parsing, sequentially:\n\nA Matpower .m file located at path2grid into an HVDCWISE_TEA single-network data structure;\nA nested folder structure located at path2data into a dictionary of timeseries;\nThe single-network structure into a multi-network one by merging it with the timeseries dictionary, if provided;\nThe single or multi-network structure into a multi-conductor one (for the HVDC grid part, if provided).\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.parse_file-Tuple{String}","page":"Home","title":"HVDCWISE_TEA.parse_file","text":"parse_file(file; <keyword arguments>)\n\nParse a Matpower .m file into an HVDCWISE_TEA single-network data structure.\n\nKeyword arguments, if any, are forwarded to PowerModels.parse_file.\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.process_additional_data!-Tuple{Dict{String, Any}}","page":"Home","title":"HVDCWISE_TEA.process_additional_data!","text":"process_additional_data!(data::Dict{String,Any})\n\nOrganise, process and perform checks on data tables that are not used/recognised in PowerModels. These may include non-dispatchable generators, flexible loads, storages, phase-shift transformers and DC components (i.e., AC/DC converters and DC branches).\n\nOptional tables are:\n\ngencost and storage, which are processed in PowerModels;\nndgen, storage_extra, load_extra, which are processed in FlexPlan;\nbusdc, convdc and branchdc, which are processed in PowerModelsMCDC;\npst, which is processed in CbaOPF.\n\nOther tables may be added as well: they will be made available in the returned object, without any check.\n\nBy default, element properties that are not used in HVDCWISE_TEA mathematical model are removed.\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.ref_add_flex_load!-Tuple{Dict{Symbol}, Dict{String}}","page":"Home","title":"HVDCWISE_TEA.ref_add_flex_load!","text":"Add to ref the keys for handling flexible demand\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.terminalDC_voltage_bound-Tuple{Dict{String}, String}","page":"Home","title":"HVDCWISE_TEA.terminalDC_voltage_bound","text":"Adjust voltage bound for multi-conductor busdc terminals\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.terminalDC_voltage_start-Tuple{Dict{String}, String}","page":"Home","title":"HVDCWISE_TEA.terminalDC_voltage_start","text":"Adjust voltage start value for multi-conductor busdc terminals\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.variable_demand_reduction-Tuple{PowerModels.AbstractPowerModel}","page":"Home","title":"HVDCWISE_TEA.variable_demand_reduction","text":"Variable for power not consumed (voluntary load reduction) at each flexible load\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.variable_demand_shifting_downwards-Tuple{PowerModels.AbstractPowerModel}","page":"Home","title":"HVDCWISE_TEA.variable_demand_shifting_downwards","text":"Variable for downward demand shifting at each flexible load\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.variable_demand_shifting_upwards-Tuple{PowerModels.AbstractPowerModel}","page":"Home","title":"HVDCWISE_TEA.variable_demand_shifting_upwards","text":"Variable for upward demand shifting at each flexible load\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.variable_flexible_demand-Tuple{PowerModels.AbstractDCPModel}","page":"Home","title":"HVDCWISE_TEA.variable_flexible_demand","text":"variables for flexible load\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.variable_mcdc_converter-Tuple{PowerModels.AbstractACPModel}","page":"Home","title":"HVDCWISE_TEA.variable_mcdc_converter","text":"variables for AC/DC converters\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.variable_mcdc_converter-Tuple{PowerModels.AbstractDCPModel}","page":"Home","title":"HVDCWISE_TEA.variable_mcdc_converter","text":"variables for AC/DC converters\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.variable_slack_power-Tuple{PowerModels.AbstractACPModel}","page":"Home","title":"HVDCWISE_TEA.variable_slack_power","text":"variables for active and reactive bus slack\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.variable_slack_power-Tuple{PowerModels.AbstractDCPModel}","page":"Home","title":"HVDCWISE_TEA.variable_slack_power","text":"variables for bus power slack\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.variable_slack_power_imaginary-Tuple{PowerModels.AbstractPowerModel}","page":"Home","title":"HVDCWISE_TEA.variable_slack_power_imaginary","text":"variable for bus reactive power slack\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.variable_slack_power_real-Tuple{PowerModels.AbstractPowerModel}","page":"Home","title":"HVDCWISE_TEA.variable_slack_power_real","text":"variable for bus active power slack\n\n\n\n\n\n","category":"method"},{"location":"#HVDCWISE_TEA.variable_total_demand-Tuple{PowerModels.AbstractPowerModel}","page":"Home","title":"HVDCWISE_TEA.variable_total_demand","text":"Variable for the actual active load demand at each load accounting for market flexibility\n\n\n\n\n\n","category":"method"}]
}
